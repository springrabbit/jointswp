{"version":3,"sources":["timeline.js","vendor/hammer-2.0.8.js"],"names":["jQuery","document","ready","$","updateHelper","param","curActive","find","curPos","children","index","lastItem","length","nextPos","type","keyCode","updateNavs","updateContent","removeClass","eq","addClass","outerNav","click","setTimeout","workSlider","$this","this","curLeft","curLeftPos","curCenter","curCenterPos","curRight","curRightPos","totalWorks","$left","$center","$right","$item","animate","opacity","hasClass","next","first","prev","last","transitionLabels","focusout","textVal","val","window","scrollTo","canScroll","scrollController","on","e","preventDefault","delta","originalEvent","wheelDelta","detail","clearTimeout","parent","targetElement","getElementById","mc","Hammer","get","set","direction","DIRECTION_VERTICAL","keyup","_typeof","Symbol","iterator","obj","constructor","prototype","exportName","undefined","setTimeoutContext","fn","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","each","i","forEach","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","Error","stack","replace","log","console","warn","apply","arguments","inherit","child","base","properties","childP","baseP","Object","create","_super","assign","boolOrFn","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parentNode","inStr","str","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","value","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd","module","exports"],"mappings":"AAAA,YAEAA,QAAQC,UAAWC,MAAM,SAAUC,GAmFjC,QAASC,GAAaC,GAEpB,GAAIC,GAAYH,EAAE,aAAaI,KAAK,cAChCC,EAASL,EAAE,aAAaM,WAAWC,MAAMJ,GACzCK,EAAWR,EAAE,aAAaM,WAAWG,OAAS,EAC9CC,EAAU,CAEK,aAAfR,EAAMS,MAAwC,KAAlBT,EAAMU,SAAkBV,EAAQ,EAC1DG,IAAWG,GACbE,EAAUL,EAAS,EACnBQ,EAAWH,GACXI,EAAcT,EAAQK,EAASF,KAG/BK,EAAWH,GACXI,EAAcT,EAAQK,EAASF,KAGX,cAAfN,EAAMS,MAA0C,KAAlBT,EAAMU,SAAkBV,EAAQ,KACtD,IAAXG,GACFK,EAAUL,EAAS,EACnBQ,EAAWH,GACXI,EAAcT,EAAQK,EAASF,KAG/BE,EAAUF,EACVK,EAAWH,GACXI,EAAcT,EAAQK,EAASF,KAOrC,QAASK,GAAWH,GAElBV,EAAE,yBAAyBM,WAAWS,YAAY,aAClDf,EAAE,aAAaM,WAAWU,GAAGN,GAASO,SAAS,aAC/CjB,EAAE,cAAcM,WAAWU,GAAGN,GAASO,SAAS,aAKlD,QAASH,GAAcT,EAAQK,EAASF,GAEtCR,EAAE,iBAAiBM,WAAWS,YAAY,sBAC1Cf,EAAE,iBAAiBM,WAAWU,GAAGN,GAASO,SAAS,sBACnDjB,EAAE,0BAA0BM,WAAWS,YAAY,+BAE/CV,IAAWG,GAAwB,IAAZE,GAA4B,IAAXL,GAAgBK,IAAYF,EACtER,EAAE,0BAA0BM,WAAWS,YAAY,+BAE5CV,EAASK,EAChBV,EAAE,iBAAiBM,WAAWU,GAAGX,GAAQC,WAAWW,SAAS,iBAG7DjB,EAAE,iBAAiBM,WAAWU,GAAGX,GAAQC,WAAWW,SAAS,iBAG/C,IAAZP,GAAiBA,IAAYF,EAC/BR,EAAE,gBAAgBiB,SAAS,aAG3BjB,EAAE,gBAAgBe,YAAY,aAKlC,QAASG,KAEPlB,EAAE,uBAAuBmB,MAAM,WAE7BnB,EAAE,gBAAgBiB,SAAS,0BAC3BG,WAAW,WACTpB,EAAE,gBAAgBiB,SAAS,gCAC1B,IACHjB,EAAE,iDAAiDiB,SAAS,YAI9DjB,EAAE,qCAAqCmB,MAAM,WAE3CnB,EAAE,gBAAgBe,YAAY,+BAC9BK,WAAW,WACTpB,EAAE,gBAAgBe,YAAY,2BAC7B,KACHf,EAAE,iDAAiDe,YAAY,YAMnE,QAASM,KAEPrB,EAAE,gCAAgCmB,MAAM,WAEtC,GAAIG,GAAQtB,EAAEuB,MACVC,EAAUxB,EAAE,gBAAgBI,KAAK,2BACjCqB,EAAazB,EAAE,gBAAgBM,WAAWC,MAAMiB,GAChDE,EAAY1B,EAAE,gBAAgBI,KAAK,6BACnCuB,EAAe3B,EAAE,gBAAgBM,WAAWC,MAAMmB,GAClDE,EAAW5B,EAAE,gBAAgBI,KAAK,4BAClCyB,EAAc7B,EAAE,gBAAgBM,WAAWC,MAAMqB,GACjDE,EAAa9B,EAAE,gBAAgBM,WAAWG,OAC1CsB,EAAQ/B,EAAE,2BACVgC,EAAUhC,EAAE,6BACZiC,EAASjC,EAAE,4BACXkC,EAAQlC,EAAE,qBAEdA,GAAE,gBAAgBmC,SAAUC,QAAU,GAAK,KAE3ChB,WAAW,WAEPE,EAAMe,SAAS,gBACbZ,EAAaK,EAAa,GAAKH,EAAeG,EAAa,GAAKD,EAAcC,EAAa,GAC7FC,EAAMhB,YAAY,0BAA0BuB,OAAOrB,SAAS,0BAC5De,EAAQjB,YAAY,4BAA4BuB,OAAOrB,SAAS,4BAChEgB,EAAOlB,YAAY,2BAA2BuB,OAAOrB,SAAS,4BAG1DQ,IAAeK,EAAa,GAC9BI,EAAMnB,YAAY,0BAA0BwB,QAAQtB,SAAS,0BAC7De,EAAQjB,YAAY,4BAA4BuB,OAAOrB,SAAS,4BAChEgB,EAAOlB,YAAY,2BAA2BuB,OAAOrB,SAAS,4BAEvDU,IAAiBG,EAAa,GACrCC,EAAMhB,YAAY,0BAA0BuB,OAAOrB,SAAS,0BAC5DiB,EAAMnB,YAAY,4BAA4BwB,QAAQtB,SAAS,4BAC/DgB,EAAOlB,YAAY,2BAA2BuB,OAAOrB,SAAS,6BAG9Dc,EAAMhB,YAAY,0BAA0BuB,OAAOrB,SAAS,0BAC5De,EAAQjB,YAAY,4BAA4BuB,OAAOrB,SAAS,4BAChEiB,EAAMnB,YAAY,2BAA2BwB,QAAQtB,SAAS,4BAK/C,IAAfQ,GAAqC,IAAjBE,GAAsC,IAAhBE,GAC5CE,EAAMhB,YAAY,0BAA0ByB,OAAOvB,SAAS,0BAC5De,EAAQjB,YAAY,4BAA4ByB,OAAOvB,SAAS,4BAChEgB,EAAOlB,YAAY,2BAA2ByB,OAAOvB,SAAS,4BAG3C,IAAfQ,GACFS,EAAMnB,YAAY,0BAA0B0B,OAAOxB,SAAS,0BAC5De,EAAQjB,YAAY,4BAA4ByB,OAAOvB,SAAS,4BAChEgB,EAAOlB,YAAY,2BAA2ByB,OAAOvB,SAAS,4BAEtC,IAAjBU,GACPI,EAAMhB,YAAY,0BAA0ByB,OAAOvB,SAAS,0BAC5DiB,EAAMnB,YAAY,4BAA4B0B,OAAOxB,SAAS,4BAC9DgB,EAAOlB,YAAY,2BAA2ByB,OAAOvB,SAAS,6BAG9Dc,EAAMhB,YAAY,0BAA0ByB,OAAOvB,SAAS,0BAC5De,EAAQjB,YAAY,4BAA4ByB,OAAOvB,SAAS,4BAChEiB,EAAMnB,YAAY,2BAA2B0B,OAAOxB,SAAS,6BAKlE,KAEHjB,EAAE,gBAAgBmC,SAAUC,QAAU,GAAK,OAM7C,QAASM,KAEP1C,EAAE,oCAAoC2C,SAAS,WAE7C,GAAIC,GAAU5C,EAAEuB,MAAMsB,KAEN,MAAZD,EACF5C,EAAEuB,MAAMR,YAAY,aAGpBf,EAAEuB,MAAMN,SAAS,aAInB6B,OAAOC,SAAS,EAAG,KAxQvB,GAAIC,IAAY,EACZC,EAAmB,IACvBjD,GAAEuB,MAAM2B,GAAG,4BAA6B,SAASC,GAE/C,IAAMnD,EAAE,cAAcqC,SAAS,UAAY,CAEzCc,EAAEC,gBAEF,IAAIC,GAASF,EAAEG,cAAcC,YAAeJ,EAAEG,cAAcC,WAAsC,GAAzBJ,EAAEG,cAAcE,MAErFH,GAAQ,IAAML,GAChBA,GAAY,EACZS,aAAaR,GACbA,EAAmB7B,WAAW,WAC5B4B,GAAY,GACX,KACH/C,EAAa,IAENoD,OAAeL,IACtBA,GAAY,EACZS,aAAaR,GACbA,EAAmB7B,WAAW,WAC5B4B,GAAY,GACX,KACH/C,UAOND,EAAE,+BAA+BmB,MAAM,WAErC,IAAMnB,EAAEuB,MAAMc,SAAS,aAAe,CAEpC,GAAIf,GAAQtB,EAAEuB,MACVpB,EAAYmB,EAAMoC,SAAStD,KAAK,cAChCC,EAASiB,EAAMoC,SAASpD,WAAWC,MAAMJ,GACzCO,EAAUY,EAAMoC,SAASpD,WAAWC,MAAMe,GAC1Cd,EAAWR,EAAEuB,MAAMmC,SAASpD,WAAWG,OAAS,CAEpDI,GAAWH,GACXI,EAAcT,EAAQK,EAASF,MAMnCR,EAAE,QAAQmB,MAAM,WAEd,GAAIhB,GAAYH,EAAE,aAAaI,KAAK,cAChCC,EAASL,EAAE,aAAaM,WAAWC,MAAMJ,GACzCK,EAAWR,EAAE,aAAaM,WAAWG,OAAS,EAC9CC,EAAUF,CAEdK,GAAWL,GACXM,EAAcT,EAAQK,EAASF,IAKjC,IAAImD,GAAgB7D,SAAS8D,eAAe,YACxCC,EAAK,GAAIC,QAAOH,EACpBE,GAAGE,IAAI,SAASC,KAAMC,UAAWH,OAAOI,qBACxCL,EAAGX,GAAG,oBAAqB,SAASC,GAElClD,EAAakD,KAIfnD,EAAEF,UAAUqE,MAAM,SAAShB,GAEnBnD,EAAE,cAAcqC,SAAS,YAC7Bc,EAAEC,iBACFnD,EAAakD,MAoMjBjC,IACAG,IACAqB,KA7QW,IAAI0B,SAAwB,kBAATC,SAA8C,gBAAlBA,QAAOC,SAAoB,SAASC,GAAK,aAAcA,IAAM,SAASA,GAAK,MAAOA,IAAqB,kBAATF,SAAqBE,EAAIC,cAAcH,QAAQE,IAAMF,OAAOI,UAAU,eAAgBF,KCHhP,SAAUzB,EAAQhD,EAAU4E,EAAYC,GAmBxC,QAASC,GAAkBC,EAAIC,EAASC,GACpC,MAAO3D,YAAW4D,EAAOH,EAAIE,GAAUD,GAY3C,QAASG,GAAeC,EAAKL,EAAIE,GAC7B,QAAII,MAAMC,QAAQF,KACdG,EAAKH,EAAKH,EAAQF,GAAKE,IAChB,GAWf,QAASM,GAAKd,EAAKD,EAAUS,GACzB,GAAIO,EAEJ,IAAKf,EAIL,GAAIA,EAAIgB,QACJhB,EAAIgB,QAAQjB,EAAUS,OACnB,IAAIR,EAAI9D,SAAWkE,EAEtB,IADAW,EAAI,EACGA,EAAIf,EAAI9D,QACX6D,EAASkB,KAAKT,EAASR,EAAIe,GAAIA,EAAGf,GAClCe,QAGJ,KAAKA,IAAKf,GACNA,EAAIkB,eAAeH,IAAMhB,EAASkB,KAAKT,EAASR,EAAIe,GAAIA,EAAGf,GAYvE,QAASmB,GAAUC,EAAQC,EAAMC,GAC7B,GAAIC,GAAqB,sBAAwBF,EAAO,KAAOC,EAAU,QACzE,OAAO,YACH,GAAI1C,GAAI,GAAI4C,OAAM,mBACdC,EAAQ7C,GAAKA,EAAE6C,MAAQ7C,EAAE6C,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,EAAMpD,EAAOqD,UAAYrD,EAAOqD,QAAQC,MAAQtD,EAAOqD,QAAQD,IAInE,OAHIA,IACAA,EAAIV,KAAK1C,EAAOqD,QAASL,EAAoBE,GAE1CL,EAAOU,MAAM9E,KAAM+E,YAwElC,QAASC,GAAQC,EAAOC,EAAMC,GAC1B,GACIC,GADAC,EAAQH,EAAKhC,SAGjBkC,GAASH,EAAM/B,UAAYoC,OAAOC,OAAOF,GACzCD,EAAOnC,YAAcgC,EACrBG,EAAOI,OAASH,EAEZF,GACAM,GAAOL,EAAQD,GAUvB,QAAS1B,GAAOH,EAAIE,GAChB,MAAO,YACH,MAAOF,GAAGwB,MAAMtB,EAASuB,YAWjC,QAASW,GAASpE,EAAKqE,GACnB,OAAI,mBAAOrE,GAAP,YAAAuB,QAAOvB,KAAOsE,GACPtE,EAAIwD,MAAMa,EAAOA,EAAK,IAAMvC,EAAYA,EAAWuC,GAEvDrE,EASX,QAASuE,GAAYC,EAAMC,GACvB,MAAQD,KAAS1C,EAAa2C,EAAOD,EASzC,QAASE,GAAkBC,EAAQC,EAAOC,GACtCrC,EAAKsC,EAASF,GAAQ,SAAS9G,GAC3B6G,EAAOI,iBAAiBjH,EAAM+G,GAAS,KAU/C,QAASG,GAAqBL,EAAQC,EAAOC,GACzCrC,EAAKsC,EAASF,GAAQ,SAAS9G,GAC3B6G,EAAOM,oBAAoBnH,EAAM+G,GAAS,KAWlD,QAASK,GAAUC,EAAMtE,GACrB,KAAOsE,GAAM,CACT,GAAIA,GAAQtE,EACR,OAAO,CAEXsE,GAAOA,EAAKC,WAEhB,OAAO,EASX,QAASC,GAAMC,EAAK/H,GAChB,MAAO+H,GAAIC,QAAQhI,MAQvB,QAASuH,GAASQ,GACd,MAAOA,GAAIE,OAAOC,MAAM,QAU5B,QAASC,GAAQC,EAAKpI,EAAMqI,GACxB,GAAID,EAAIJ,UAAYK,EAChB,MAAOD,GAAIJ,QAAQhI,EAGnB,KADA,GAAIkF,GAAI,EACDA,EAAIkD,EAAI/H,QAAQ,CACnB,GAAKgI,GAAaD,EAAIlD,GAAGmD,IAAcrI,IAAWqI,GAAaD,EAAIlD,KAAOlF,EACtE,MAAOkF,EAEXA,KAEJ,SASR,QAASoD,GAAQnE,GACb,MAAOY,OAAMV,UAAUkE,MAAMnD,KAAKjB,EAAK,GAU3C,QAASqE,GAAYJ,EAAKK,EAAKC,GAK3B,IAJA,GAAIC,MACAC,KACA1D,EAAI,EAEDA,EAAIkD,EAAI/H,QAAQ,CACnB,GAAIoC,GAAMgG,EAAML,EAAIlD,GAAGuD,GAAOL,EAAIlD,EAC9BiD,GAAQS,EAAQnG,GAAO,GACvBkG,EAAQE,KAAKT,EAAIlD,IAErB0D,EAAO1D,GAAKzC,EACZyC,IAaJ,MAVIwD,KAIIC,EAHCF,EAGSE,EAAQD,KAAK,SAAyBI,EAAGC,GAC/C,MAAOD,GAAEL,GAAOM,EAAEN,KAHZE,EAAQD,QAQnBC,EASX,QAASK,GAAS7E,EAAK8E,GAKnB,IAJA,GAAIC,GAAQC,EACRC,EAAYH,EAAS,GAAGI,cAAgBJ,EAASV,MAAM,GAEvDrD,EAAI,EACDA,EAAIoE,GAAgBjJ,QAAQ,CAI/B,GAHA6I,EAASI,GAAgBpE,GACzBiE,EAAQD,EAAUA,EAASE,EAAYH,EAEnCE,IAAQhF,GACR,MAAOgF,EAEXjE,KAEJ,MAAOX,GAQX,QAASgF,KACL,MAAOC,MAQX,QAASC,GAAoBC,GACzB,GAAIC,GAAMD,EAAQE,eAAiBF,CACnC,OAAQC,GAAIE,aAAeF,EAAIG,cAAgBpH,EAyCnD,QAASqH,GAAMC,EAASC,GACpB,GAAIC,GAAO/I,IACXA,MAAK6I,QAAUA,EACf7I,KAAK8I,SAAWA,EAChB9I,KAAKuI,QAAUM,EAAQN,QACvBvI,KAAKiG,OAAS4C,EAAQG,QAAQC,YAI9BjJ,KAAKkJ,WAAa,SAASC,GACnBzD,EAASmD,EAAQG,QAAQI,QAASP,KAClCE,EAAK5C,QAAQgD,IAIrBnJ,KAAKqJ,OAoCT,QAASC,GAAoBT,GACzB,GAAIU,GACAC,EAAaX,EAAQG,QAAQQ,UAajC,OAAO,KAVHD,EADAC,EACOA,EACAC,GACAC,EACAC,GACAC,EACCC,GAGDC,EAFAC,GAIOlB,EAASmB,GAS/B,QAASA,GAAanB,EAASoB,EAAWC,GACtC,GAAIC,GAAcD,EAAME,SAASlL,OAC7BmL,EAAqBH,EAAMI,gBAAgBpL,OAC3CqL,EAAWN,EAAYO,IAAgBL,EAAcE,IAAuB,EAC5EI,EAAWR,GAAaS,GAAYC,KAAkBR,EAAcE,IAAuB,CAE/FH,GAAMK,UAAYA,EAClBL,EAAMO,UAAYA,EAEdF,IACA1B,EAAQ+B,YAKZV,EAAMD,UAAYA,EAGlBY,EAAiBhC,EAASqB,GAG1BrB,EAAQiC,KAAK,eAAgBZ,GAE7BrB,EAAQkC,UAAUb,GAClBrB,EAAQ+B,QAAQI,UAAYd,EAQhC,QAASW,GAAiBhC,EAASqB,GAC/B,GAAIU,GAAU/B,EAAQ+B,QAClBR,EAAWF,EAAME,SACjBa,EAAiBb,EAASlL,MAGzB0L,GAAQM,aACTN,EAAQM,WAAaC,EAAqBjB,IAI1Ce,EAAiB,IAAML,EAAQQ,cAC/BR,EAAQQ,cAAgBD,EAAqBjB,GACnB,IAAnBe,IACPL,EAAQQ,eAAgB,EAG5B,IAAIF,GAAaN,EAAQM,WACrBE,EAAgBR,EAAQQ,cACxBC,EAAeD,EAAgBA,EAAcE,OAASJ,EAAWI,OAEjEA,EAASpB,EAAMoB,OAASC,EAAUnB,EACtCF,GAAMsB,UAAYC,KAClBvB,EAAMwB,UAAYxB,EAAMsB,UAAYN,EAAWM,UAE/CtB,EAAMyB,MAAQC,EAASP,EAAcC,GACrCpB,EAAM2B,SAAWC,EAAYT,EAAcC,GAE3CS,EAAenB,EAASV,GACxBA,EAAM8B,gBAAkBC,EAAa/B,EAAMgC,OAAQhC,EAAMiC,OAEzD,IAAIC,GAAkBC,EAAYnC,EAAMwB,UAAWxB,EAAMgC,OAAQhC,EAAMiC,OACvEjC,GAAMoC,iBAAmBF,EAAgBG,EACzCrC,EAAMsC,iBAAmBJ,EAAgBK,EACzCvC,EAAMkC,gBAAmBM,GAAIN,EAAgBG,GAAKG,GAAIN,EAAgBK,GAAML,EAAgBG,EAAIH,EAAgBK,EAEhHvC,EAAMyC,MAAQvB,EAAgBwB,EAASxB,EAAchB,SAAUA,GAAY,EAC3EF,EAAM2C,SAAWzB,EAAgB0B,EAAY1B,EAAchB,SAAUA,GAAY,EAEjFF,EAAM6C,YAAenC,EAAQI,UAAsCd,EAAME,SAASlL,OAC9E0L,EAAQI,UAAU+B,YAAe7C,EAAME,SAASlL,OAAS0L,EAAQI,UAAU+B,YADtC7C,EAAME,SAASlL,OAGxD8N,EAAyBpC,EAASV,EAGlC,IAAIjE,GAAS4C,EAAQN,OACjB/B,GAAU0D,EAAM+C,SAAShH,OAAQA,KACjCA,EAASiE,EAAM+C,SAAShH,QAE5BiE,EAAMjE,OAASA,EAGnB,QAAS8F,GAAenB,EAASV,GAC7B,GAAIoB,GAASpB,EAAMoB,OACf4B,EAAStC,EAAQuC,gBACjBC,EAAYxC,EAAQwC,cACpBpC,EAAYJ,EAAQI,aAEpBd,GAAMD,YAAcO,IAAeQ,EAAUf,YAAcS,KAC3D0C,EAAYxC,EAAQwC,WAChBb,EAAGvB,EAAUkB,QAAU,EACvBO,EAAGzB,EAAUmB,QAAU,GAG3Be,EAAStC,EAAQuC,aACbZ,EAAGjB,EAAOiB,EACVE,EAAGnB,EAAOmB,IAIlBvC,EAAMgC,OAASkB,EAAUb,GAAKjB,EAAOiB,EAAIW,EAAOX,GAChDrC,EAAMiC,OAASiB,EAAUX,GAAKnB,EAAOmB,EAAIS,EAAOT,GAQpD,QAASO,GAAyBpC,EAASV,GACvC,GAEImD,GAAUC,EAAWC,EAAW7K,EAFhCxB,EAAO0J,EAAQ4C,cAAgBtD,EAC/BwB,EAAYxB,EAAMsB,UAAYtK,EAAKsK,SAGvC,IAAItB,EAAMD,WAAaU,KAAiBe,EAAY+B,IAAoBvM,EAAKmM,WAAajK,GAAY,CAClG,GAAI8I,GAAShC,EAAMgC,OAAShL,EAAKgL,OAC7BC,EAASjC,EAAMiC,OAASjL,EAAKiL,OAE7BuB,EAAIrB,EAAYX,EAAWQ,EAAQC,EACvCmB,GAAYI,EAAEnB,EACdgB,EAAYG,EAAEjB,EACdY,EAAYX,GAAIgB,EAAEnB,GAAKG,GAAIgB,EAAEjB,GAAMiB,EAAEnB,EAAImB,EAAEjB,EAC3C/J,EAAYuJ,EAAaC,EAAQC,GAEjCvB,EAAQ4C,aAAetD,MAGvBmD,GAAWnM,EAAKmM,SAChBC,EAAYpM,EAAKoM,UACjBC,EAAYrM,EAAKqM,UACjB7K,EAAYxB,EAAKwB,SAGrBwH,GAAMmD,SAAWA,EACjBnD,EAAMoD,UAAYA,EAClBpD,EAAMqD,UAAYA,EAClBrD,EAAMxH,UAAYA,EAQtB,QAASyI,GAAqBjB,GAK1B,IAFA,GAAIE,MACArG,EAAI,EACDA,EAAImG,EAAME,SAASlL,QACtBkL,EAASrG,IACL4J,QAASC,GAAM1D,EAAME,SAASrG,GAAG4J,SACjCE,QAASD,GAAM1D,EAAME,SAASrG,GAAG8J,UAErC9J,GAGJ,QACIyH,UAAWC,KACXrB,SAAUA,EACVkB,OAAQC,EAAUnB,GAClB8B,OAAQhC,EAAMgC,OACdC,OAAQjC,EAAMiC,QAStB,QAASZ,GAAUnB,GACf,GAAIa,GAAiBb,EAASlL,MAG9B,IAAuB,IAAnB+L,EACA,OACIsB,EAAGqB,GAAMxD,EAAS,GAAGuD,SACrBlB,EAAGmB,GAAMxD,EAAS,GAAGyD,SAK7B,KADA,GAAItB,GAAI,EAAGE,EAAI,EAAG1I,EAAI,EACfA,EAAIkH,GACPsB,GAAKnC,EAASrG,GAAG4J,QACjBlB,GAAKrC,EAASrG,GAAG8J,QACjB9J,GAGJ,QACIwI,EAAGqB,GAAMrB,EAAItB,GACbwB,EAAGmB,GAAMnB,EAAIxB,IAWrB,QAASoB,GAAYX,EAAWa,EAAGE,GAC/B,OACIF,EAAGA,EAAIb,GAAa,EACpBe,EAAGA,EAAIf,GAAa,GAU5B,QAASO,GAAaM,EAAGE,GACrB,MAAIF,KAAME,EACCqB,GAGPpB,GAAIH,IAAMG,GAAID,GACPF,EAAI,EAAIwB,GAAiBC,GAE7BvB,EAAI,EAAIwB,GAAeC,GAUlC,QAASpC,GAAYqC,EAAIC,EAAIC,GACpBA,IACDA,EAAQC,GAEZ,IAAI/B,GAAI6B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B5B,EAAI2B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,GAEhC,OAAOE,MAAKC,KAAMjC,EAAIA,EAAME,EAAIA,GAUpC,QAASb,GAASuC,EAAIC,EAAIC,GACjBA,IACDA,EAAQC,GAEZ,IAAI/B,GAAI6B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B5B,EAAI2B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,GAChC,OAA0B,KAAnBE,KAAKE,MAAMhC,EAAGF,GAAWgC,KAAKG,GASzC,QAAS5B,GAAY6B,EAAOC,GACxB,MAAOhD,GAASgD,EAAI,GAAIA,EAAI,GAAIC,IAAmBjD,EAAS+C,EAAM,GAAIA,EAAM,GAAIE,IAUpF,QAASjC,GAAS+B,EAAOC,GACrB,MAAO9C,GAAY8C,EAAI,GAAIA,EAAI,GAAIC,IAAmB/C,EAAY6C,EAAM,GAAIA,EAAM,GAAIE,IAiB1F,QAAS9E,KACL/J,KAAK8O,KAAOC,GACZ/O,KAAKgP,MAAQC,GAEbjP,KAAKkP,SAAU,EAEftG,EAAM9D,MAAM9E,KAAM+E,WAoEtB,QAAS2E,KACL1J,KAAK8O,KAAOK,GACZnP,KAAKgP,MAAQI,GAEbxG,EAAM9D,MAAM9E,KAAM+E,WAElB/E,KAAKqP,MAASrP,KAAK6I,QAAQ+B,QAAQ0E,iBAoEvC,QAASC,KACLvP,KAAKwP,SAAWC,GAChBzP,KAAKgP,MAAQU,GACb1P,KAAK2P,SAAU,EAEf/G,EAAM9D,MAAM9E,KAAM+E,WAsCtB,QAAS6K,GAAuBzG,EAAI/J,GAChC,GAAIyQ,GAAM1I,EAAQgC,EAAG2G,SACjBC,EAAU5I,EAAQgC,EAAG6G,eAMzB,OAJI5Q,IAAQsL,GAAYC,MACpBkF,EAAMxI,EAAYwI,EAAII,OAAOF,GAAU,cAAc,KAGjDF,EAAKE,GAiBjB,QAASnG,KACL5J,KAAKwP,SAAWU,GAChBlQ,KAAKmQ,aAELvH,EAAM9D,MAAM9E,KAAM+E,WA0BtB,QAASqL,GAAWjH,EAAI/J,GACpB,GAAIiR,GAAalJ,EAAQgC,EAAG2G,SACxBK,EAAYnQ,KAAKmQ,SAGrB,IAAI/Q,GAAQoL,GAAc8F,KAAqC,IAAtBD,EAAWnR,OAEhD,MADAiR,GAAUE,EAAW,GAAGE,aAAc,GAC9BF,EAAYA,EAGxB,IAAItM,GACAyM,EACAR,EAAiB7I,EAAQgC,EAAG6G,gBAC5BS,KACAxK,EAASjG,KAAKiG,MAQlB,IALAuK,EAAgBH,EAAWK,OAAO,SAASC,GACvC,MAAOnK,GAAUmK,EAAM1K,OAAQA,KAI/B7G,IAASoL,GAET,IADAzG,EAAI,EACGA,EAAIyM,EAActR,QACrBiR,EAAUK,EAAczM,GAAGwM,aAAc,EACzCxM,GAMR,KADAA,EAAI,EACGA,EAAIiM,EAAe9Q,QAClBiR,EAAUH,EAAejM,GAAGwM,aAC5BE,EAAqB/I,KAAKsI,EAAejM,IAIzC3E,GAAQsL,GAAYC,WACbwF,GAAUH,EAAejM,GAAGwM,YAEvCxM,GAGJ,OAAK0M,GAAqBvR,QAMtBmI,EAAYmJ,EAAcP,OAAOQ,GAAuB,cAAc,GACtEA,GAPJ,OAwBJ,QAAS3G,KACLlB,EAAM9D,MAAM9E,KAAM+E,UAElB,IAAIoB,GAAU1C,EAAOzD,KAAKmG,QAASnG,KACnCA,MAAK2Q,MAAQ,GAAI/G,GAAW5J,KAAK6I,QAAS1C,GAC1CnG,KAAK4Q,MAAQ,GAAI7G,GAAW/J,KAAK6I,QAAS1C,GAE1CnG,KAAK6Q,aAAe,KACpB7Q,KAAK8Q,eAqCT,QAASC,GAAc9G,EAAW+G,GAC1B/G,EAAYO,IACZxK,KAAK6Q,aAAeG,EAAU1G,gBAAgB,GAAGiG,WACjDU,EAAahN,KAAKjE,KAAMgR,IACjB/G,GAAaS,GAAYC,KAChCsG,EAAahN,KAAKjE,KAAMgR,GAIhC,QAASC,GAAaD,GAClB,GAAIL,GAAQK,EAAU1G,gBAAgB,EAEtC,IAAIqG,EAAMJ,aAAevQ,KAAK6Q,aAAc,CACxC,GAAIK,IAAa3E,EAAGoE,EAAMhD,QAASlB,EAAGkE,EAAM9C,QAC5C7N,MAAK8Q,YAAYpJ,KAAKwJ,EACtB,IAAIC,GAAMnR,KAAK8Q,YACXM,EAAkB,WAClB,GAAIrN,GAAIoN,EAAItK,QAAQqK,EAChBnN,OACAoN,EAAIE,OAAOtN,EAAG,GAGtBlE,YAAWuR,EAAiBE,KAIpC,QAASC,GAAiBP,GAEtB,IAAK,GADDzE,GAAIyE,EAAU/D,SAASU,QAASlB,EAAIuE,EAAU/D,SAASY,QAClD9J,EAAI,EAAGA,EAAI/D,KAAK8Q,YAAY5R,OAAQ6E,IAAK,CAC9C,GAAIyN,GAAIxR,KAAK8Q,YAAY/M,GACrB0N,EAAKlD,KAAK7B,IAAIH,EAAIiF,EAAEjF,GAAImF,EAAKnD,KAAK7B,IAAID,EAAI+E,EAAE/E,EAChD,IAAIgF,GAAME,IAAkBD,GAAMC,GAC9B,OAAO,EAGf,OAAO,EAsBX,QAASC,GAAY/I,EAASgJ,GAC1B7R,KAAK6I,QAAUA,EACf7I,KAAKyC,IAAIoP,GAmGb,QAASC,GAAkBC,GAEvB,GAAIpL,EAAMoL,EAASC,IACf,MAAOA,GAGX,IAAIC,GAAUtL,EAAMoL,EAASG,IACzBC,EAAUxL,EAAMoL,EAASK,GAM7B,OAAIH,IAAWE,EACJH,GAIPC,GAAWE,EACJF,EAAUC,GAAqBE,GAItCzL,EAAMoL,EAASM,IACRA,GAGJC,GAGX,QAASC,KACL,IAAKC,GACD,OAAO,CAEX,IAAIC,MACAC,EAAcnR,EAAOoR,KAAOpR,EAAOoR,IAAIC,QAO3C,QANC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQ5O,QAAQ,SAAS1C,GAI/EmR,EAASnR,IAAOoR,GAAcnR,EAAOoR,IAAIC,SAAS,eAAgBtR,KAE/DmR,EA4CX,QAASI,GAAW7J,GAChBhJ,KAAKgJ,QAAUvD,MAAWzF,KAAK8S,SAAU9J,OAEzChJ,KAAK+S,GAAK3K,IAEVpI,KAAK6I,QAAU,KAGf7I,KAAKgJ,QAAQI,OAASvD,EAAY7F,KAAKgJ,QAAQI,QAAQ,GAEvDpJ,KAAKgT,MAAQC,GAEbjT,KAAKkT,gBACLlT,KAAKmT,eAqOT,QAASC,GAASJ,GACd,MAAIA,GAAQK,GACD,SACAL,EAAQM,GACR,MACAN,EAAQO,GACR,OACAP,EAAQQ,GACR,QAEJ,GAQX,QAASC,GAAa/Q,GAClB,MAAIA,IAAawL,GACN,OACAxL,GAAauL,GACb,KACAvL,GAAaqL,GACb,OACArL,GAAasL,GACb,QAEJ,GASX,QAAS0F,GAA6BC,EAAiBC,GACnD,GAAI/K,GAAU+K,EAAW/K,OACzB,OAAIA,GACOA,EAAQrG,IAAImR,GAEhBA,EAQX,QAASE,MACLhB,EAAW/N,MAAM9E,KAAM+E,WA6D3B,QAAS+O,MACLD,GAAe/O,MAAM9E,KAAM+E,WAE3B/E,KAAK+T,GAAK,KACV/T,KAAKgU,GAAK,KA4Ed,QAASC,MACLJ,GAAe/O,MAAM9E,KAAM+E,WAsC/B,QAASmP,MACLrB,EAAW/N,MAAM9E,KAAM+E,WAEvB/E,KAAKmU,OAAS,KACdnU,KAAKoU,OAAS,KAmElB,QAASC,MACLR,GAAe/O,MAAM9E,KAAM+E,WA8B/B,QAASuP,MACLT,GAAe/O,MAAM9E,KAAM+E,WA2D/B,QAASwP,MACL1B,EAAW/N,MAAM9E,KAAM+E,WAIvB/E,KAAKwU,OAAQ,EACbxU,KAAKyU,SAAU,EAEfzU,KAAKmU,OAAS,KACdnU,KAAKoU,OAAS,KACdpU,KAAK0U,MAAQ,EAqGjB,QAASnS,IAAOgG,EAASS,GAGrB,MAFAA,GAAUA,MACVA,EAAQ2L,YAAc9O,EAAYmD,EAAQ2L,YAAapS,GAAOuQ,SAAS8B,QAChE,GAAIC,IAAQtM,EAASS,GAiIhC,QAAS6L,IAAQtM,EAASS,GACtBhJ,KAAKgJ,QAAUvD,MAAWlD,GAAOuQ,SAAU9J,OAE3ChJ,KAAKgJ,QAAQC,YAAcjJ,KAAKgJ,QAAQC,aAAeV,EAEvDvI,KAAK8U,YACL9U,KAAK4K,WACL5K,KAAK2U,eACL3U,KAAK+U,eAEL/U,KAAKuI,QAAUA,EACfvI,KAAKkK,MAAQZ,EAAoBtJ,MACjCA,KAAKgV,YAAc,GAAIpD,GAAY5R,KAAMA,KAAKgJ,QAAQgM,aAEtDC,GAAejV,MAAM,GAErB8D,EAAK9D,KAAKgJ,QAAQ2L,YAAa,SAASO,GACpC,GAAItB,GAAa5T,KAAKmV,IAAI,GAAKD,GAAK,GAAIA,EAAK,IAC7CA,GAAK,IAAMtB,EAAWwB,cAAcF,EAAK,IACzCA,EAAK,IAAMtB,EAAWyB,eAAeH,EAAK,KAC3ClV,MA4PP,QAASiV,IAAepM,EAASsM,GAC7B,GAAI5M,GAAUM,EAAQN,OACtB,IAAKA,EAAQ+M,MAAb,CAGA,GAAItN,EACJlE,GAAK+E,EAAQG,QAAQuM,SAAU,SAAS1D,EAAOxN,GAC3C2D,EAAOH,EAASU,EAAQ+M,MAAOjR,GAC3B8Q,GACAtM,EAAQkM,YAAY/M,GAAQO,EAAQ+M,MAAMtN,GAC1CO,EAAQ+M,MAAMtN,GAAQ6J,GAEtBtJ,EAAQ+M,MAAMtN,GAAQa,EAAQkM,YAAY/M,IAAS,KAGtDmN,IACDtM,EAAQkM,iBAShB,QAASS,IAAgBC,EAAOC,GAC5B,GAAIC,GAAepX,EAASqX,YAAY,QACxCD,GAAaE,UAAUJ,GAAO,GAAM,GACpCE,EAAaG,QAAUJ,EACvBA,EAAKzP,OAAO8P,cAAcJ,GAngF9B,GA+FIlQ,IA/FA0C,IAAmB,GAAI,SAAU,MAAO,KAAM,KAAM,KACpD6N,GAAezX,EAAS0X,cAAc,OAEtCrQ,GAAgB,WAEhBgI,GAAQW,KAAKX,MACblB,GAAM6B,KAAK7B,IACXjB,GAAMyK,KAAKzK,GA0FXhG,IADyB,kBAAlBH,QAAOG,OACL,SAAgBQ,GACrB,GAAIA,IAAW7C,GAAwB,OAAX6C,EACxB,KAAM,IAAIkQ,WAAU,6CAIxB,KAAK,GADDC,GAAS9Q,OAAOW,GACXjH,EAAQ,EAAGA,EAAQ+F,UAAU7F,OAAQF,IAAS,CACnD,GAAIqX,GAAStR,UAAU/F,EACvB,IAAIqX,IAAWjT,GAAwB,OAAXiT,EACxB,IAAK,GAAIC,KAAWD,GACZA,EAAOnS,eAAeoS,KACtBF,EAAOE,GAAWD,EAAOC,IAKzC,MAAOF,IAGF9Q,OAAOG,MAWpB,IAAI8Q,IAASpS,EAAU,SAAgBqS,EAAMvP,EAAKwP,GAG9C,IAFA,GAAIC,GAAOpR,OAAOoR,KAAKzP,GACnBlD,EAAI,EACDA,EAAI2S,EAAKxX,UACPuX,GAAUA,GAASD,EAAKE,EAAK3S,MAAQX,KACtCoT,EAAKE,EAAK3S,IAAMkD,EAAIyP,EAAK3S,KAE7BA,GAEJ,OAAOyS,IACR,SAAU,iBASTC,GAAQtS,EAAU,SAAeqS,EAAMvP,GACvC,MAAOsP,IAAOC,EAAMvP,GAAK,IAC1B,QAAS,iBAiNRoB,GAAY,EAeZsO,GAAe,wCAEf9M,GAAiB,gBAAkBtI,GACnCkI,GAAyB5B,EAAStG,EAAQ,kBAAoB6B,EAC9DuG,GAAqBE,IAAiB8M,GAAaC,KAAKC,UAAUC,WAElEC,GAAmB,QACnBC,GAAiB,MACjBC,GAAmB,QACnBC,GAAoB,SAEpBzJ,GAAmB,GAEnBjD,GAAc,EACd8F,GAAa,EACb5F,GAAY,EACZC,GAAe,EAEfmD,GAAiB,EACjBC,GAAiB,EACjBC,GAAkB,EAClBC,GAAe,EACfC,GAAiB,GAEjBiJ,GAAuBpJ,GAAiBC,GACxCrL,GAAqBsL,GAAeC,GACpCkJ,GAAgBD,GAAuBxU,GAEvC2L,IAAY,IAAK,KACjBO,IAAmB,UAAW,UA4BlCjG,GAAM1F,WAKFiD,QAAS,aAKTkD,KAAM,WACFrJ,KAAK8O,MAAQ9I,EAAkBhG,KAAKuI,QAASvI,KAAK8O,KAAM9O,KAAKkJ,YAC7DlJ,KAAKwP,UAAYxJ,EAAkBhG,KAAKiG,OAAQjG,KAAKwP,SAAUxP,KAAKkJ,YACpElJ,KAAKgP,OAAShJ,EAAkBsC,EAAoBtI,KAAKuI,SAAUvI,KAAKgP,MAAOhP,KAAKkJ,aAMxFmO,QAAS,WACLrX,KAAK8O,MAAQxI,EAAqBtG,KAAKuI,QAASvI,KAAK8O,KAAM9O,KAAKkJ,YAChElJ,KAAKwP,UAAYlJ,EAAqBtG,KAAKiG,OAAQjG,KAAKwP,SAAUxP,KAAKkJ,YACvElJ,KAAKgP,OAAS1I,EAAqBgC,EAAoBtI,KAAKuI,SAAUvI,KAAKgP,MAAOhP,KAAKkJ,aA4T/F,IAAIoO,KACAC,UAAW/M,GACXgN,UAAWlH,GACXmH,QAAS/M,IAGTqE,GAAuB,YACvBE,GAAsB,mBAgB1BjK,GAAQ+E,EAAYnB,GAKhBzC,QAAS,SAAmBgD,GACxB,GAAIc,GAAYqN,GAAgBnO,EAAG/J,KAG/B6K,GAAYO,IAA6B,IAAdrB,EAAGuO,SAC9B1X,KAAKkP,SAAU,GAGfjF,EAAYqG,IAA2B,IAAbnH,EAAGwO,QAC7B1N,EAAYS,IAIX1K,KAAKkP,UAINjF,EAAYS,KACZ1K,KAAKkP,SAAU,GAGnBlP,KAAK8I,SAAS9I,KAAK6I,QAASoB,GACxBG,UAAWjB,GACXmB,iBAAkBnB,GAClByO,YAAaX,GACbhK,SAAU9D,OAKtB,IAAI0O,KACAC,YAAatN,GACbuN,YAAazH,GACb0H,UAAWtN,GACXuN,cAAetN,GACfuN,WAAYvN,IAIZwN,IACAC,EAAGrB,GACHsB,EAAGrB,GACHsB,EAAGrB,GACHsB,EAAGrB,IAGH/H,GAAyB,cACzBC,GAAwB,qCAGxB7N,GAAOiX,iBAAmBjX,EAAOkX,eACjCtJ,GAAyB,gBACzBC,GAAwB,6CAiB5BpK,EAAQ0E,EAAmBd,GAKvBzC,QAAS,SAAmBgD,GACxB,GAAIkG,GAAQrP,KAAKqP,MACbqJ,GAAgB,EAEhBC,EAAsBxP,EAAG/J,KAAKwZ,cAAclU,QAAQ,KAAM,IAC1DuF,EAAY4N,GAAkBc,GAC9Bf,EAAcO,GAAuBhP,EAAGyO,cAAgBzO,EAAGyO,YAE3DiB,EAAWjB,GAAeb,GAG1B+B,EAAa9R,EAAQqI,EAAOlG,EAAG4P,UAAW,YAG1C9O,GAAYO,KAA8B,IAAdrB,EAAGuO,QAAgBmB,GAC3CC,EAAa,IACbzJ,EAAM3H,KAAKyB,GACX2P,EAAazJ,EAAMnQ,OAAS,GAEzB+K,GAAaS,GAAYC,MAChC+N,GAAgB,GAIhBI,EAAa,IAKjBzJ,EAAMyJ,GAAc3P,EAEpBnJ,KAAK8I,SAAS9I,KAAK6I,QAASoB,GACxBG,SAAUiF,EACV/E,iBAAkBnB,GAClByO,YAAaA,EACb3K,SAAU9D,IAGVuP,GAEArJ,EAAMgC,OAAOyH,EAAY,MAKrC,IAAIE,KACAC,WAAYzO,GACZ0O,UAAW5I,GACX6I,SAAUzO,GACV0O,YAAazO,IAGb8E,GAA6B,aAC7BC,GAA6B,2CAejC1K,GAAQuK,EAAkB3G,GACtBzC,QAAS,SAAmBgD,GACxB,GAAI/J,GAAO4Z,GAAuB7P,EAAG/J,KAOrC,IAJIA,IAASoL,KACTxK,KAAK2P,SAAU,GAGd3P,KAAK2P,QAAV,CAIA,GAAIG,GAAUF,EAAuB3L,KAAKjE,KAAMmJ,EAAI/J,EAGhDA,IAAQsL,GAAYC,KAAiBmF,EAAQ,GAAG5Q,OAAS4Q,EAAQ,GAAG5Q,SAAW,IAC/Ec,KAAK2P,SAAU,GAGnB3P,KAAK8I,SAAS9I,KAAK6I,QAASzJ,GACxBgL,SAAU0F,EAAQ,GAClBxF,gBAAiBwF,EAAQ,GACzB8H,YAAab,GACb9J,SAAU9D,OAsBtB,IAAIkQ,KACAJ,WAAYzO,GACZ0O,UAAW5I,GACX6I,SAAUzO,GACV0O,YAAazO,IAGbuF,GAAsB,2CAc1BlL,GAAQ4E,EAAYhB,GAChBzC,QAAS,SAAoBgD,GACzB,GAAI/J,GAAOia,GAAgBlQ,EAAG/J,MAC1B0Q,EAAUM,EAAWnM,KAAKjE,KAAMmJ,EAAI/J,EACnC0Q,IAIL9P,KAAK8I,SAAS9I,KAAK6I,QAASzJ,GACxBgL,SAAU0F,EAAQ,GAClBxF,gBAAiBwF,EAAQ,GACzB8H,YAAab,GACb9J,SAAU9D,MA4EtB,IAAImI,IAAgB,KAChBK,GAAiB,EAarB3M,GAAQ8E,EAAiBlB,GAOrBzC,QAAS,SAAoB0C,EAASyQ,EAAYC,GAC9C,GAAIV,GAAWU,EAAU3B,aAAeb,GACpCyC,EAAWD,EAAU3B,aAAeX,EAExC,MAAIuC,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAIb,EACA9H,EAAc9M,KAAKjE,KAAMsZ,EAAYC,OAClC,IAAIC,GAAWjI,EAAiBtN,KAAKjE,KAAMuZ,GAC9C,MAGJvZ,MAAK8I,SAASD,EAASyQ,EAAYC,KAMvClC,QAAS,WACLrX,KAAK2Q,MAAM0G,UACXrX,KAAK4Q,MAAMyG,YA0CnB,IAAIsC,IAAwB9R,EAASmO,GAAaV,MAAO,eACrD9C,GAAsBmH,KAA0BvW,EAGhDwW,GAAuB,UACvBtH,GAAoB,OACpBD,GAA4B,eAC5BL,GAAoB,OACpBE,GAAqB,QACrBE,GAAqB,QACrByH,GAAmBtH,GAcvBX,GAAY1O,WAKRT,IAAK,SAASoP,GAENA,GAAS+H,KACT/H,EAAQ7R,KAAK8Z,WAGbtH,IAAuBxS,KAAK6I,QAAQN,QAAQ+M,OAASuE,GAAiBhI,KACtE7R,KAAK6I,QAAQN,QAAQ+M,MAAMqE,IAAyB9H,GAExD7R,KAAK+R,QAAUF,EAAM+G,cAAc9R,QAMvCiT,OAAQ,WACJ/Z,KAAKyC,IAAIzC,KAAK6I,QAAQG,QAAQgM,cAOlC8E,QAAS,WACL,GAAI/H,KAMJ,OALAjO,GAAK9D,KAAK6I,QAAQ8L,YAAa,SAASf,GAChClO,EAASkO,EAAW5K,QAAQI,QAASwK,MACrC7B,EAAUA,EAAQ9B,OAAO2D,EAAWoG,qBAGrClI,EAAkBC,EAAQkI,KAAK,OAO1CC,gBAAiB,SAAShQ,GACtB,GAAI+C,GAAW/C,EAAM+C,SACjBvK,EAAYwH,EAAM8B,eAGtB,IAAIhM,KAAK6I,QAAQ+B,QAAQuP,UAErB,WADAlN,GAASpL,gBAIb,IAAIkQ,GAAU/R,KAAK+R,QACfqI,EAAUzT,EAAMoL,EAASC,MAAuB6H,GAAiB7H,IACjEG,EAAUxL,EAAMoL,EAASK,MAAwByH,GAAiBzH,IAClEH,EAAUtL,EAAMoL,EAASG,MAAwB2H,GAAiB3H,GAEtE,IAAIkI,EAAS,CAGT,GAAIC,GAAyC,IAA1BnQ,EAAME,SAASlL,OAC9Bob,EAAgBpQ,EAAM2B,SAAW,EACjC0O,EAAiBrQ,EAAMwB,UAAY,GAEvC,IAAI2O,GAAgBC,GAAiBC,EACjC,OAIR,MAAItI,IAAWE,EAAf,OAKIiI,GACCjI,GAAWzP,EAAYyU,IACvBlF,GAAWvP,EAAYC,GACjB3C,KAAKwa,WAAWvN,GAH3B,QAWJuN,WAAY,SAASvN,GACjBjN,KAAK6I,QAAQ+B,QAAQuP,WAAY,EACjClN,EAASpL,kBAiFjB,IAAIoR,IAAiB,EACjBO,GAAc,EACdD,GAAgB,EAChBD,GAAc,EACdmH,GAAmBnH,GACnBD,GAAkB,GAClBqH,GAAe,EAwBnB7H,GAAW3P,WAKP4P,YAOArQ,IAAK,SAASuG,GAKV,MAJAvD,IAAOzF,KAAKgJ,QAASA,GAGrBhJ,KAAK6I,SAAW7I,KAAK6I,QAAQmM,YAAY+E,SAClC/Z,MAQXoV,cAAe,SAASzB,GACpB,GAAIjQ,EAAeiQ,EAAiB,gBAAiB3T,MACjD,MAAOA,KAGX,IAAIkT,GAAelT,KAAKkT,YAMxB,OALAS,GAAkBD,EAA6BC,EAAiB3T,MAC3DkT,EAAaS,EAAgBZ,MAC9BG,EAAaS,EAAgBZ,IAAMY,EACnCA,EAAgByB,cAAcpV,OAE3BA,MAQX2a,kBAAmB,SAAShH,GACxB,MAAIjQ,GAAeiQ,EAAiB,oBAAqB3T,MAC9CA,MAGX2T,EAAkBD,EAA6BC,EAAiB3T,YACzDA,MAAKkT,aAAaS,EAAgBZ,IAClC/S,OAQXqV,eAAgB,SAAS1B,GACrB,GAAIjQ,EAAeiQ,EAAiB,iBAAkB3T,MAClD,MAAOA,KAGX,IAAImT,GAAcnT,KAAKmT,WAMvB,OALAQ,GAAkBD,EAA6BC,EAAiB3T,MAC5DgH,EAAQmM,EAAaQ,UACrBR,EAAYzL,KAAKiM,GACjBA,EAAgB0B,eAAerV,OAE5BA,MAQX4a,mBAAoB,SAASjH,GACzB,GAAIjQ,EAAeiQ,EAAiB,qBAAsB3T,MACtD,MAAOA,KAGX2T,GAAkBD,EAA6BC,EAAiB3T,KAChE,IAAIhB,GAAQgI,EAAQhH,KAAKmT,YAAaQ,EAItC,OAHI3U,OACAgB,KAAKmT,YAAY9B,OAAOrS,EAAO,GAE5BgB,MAOX6a,mBAAoB,WAChB,MAAO7a,MAAKmT,YAAYjU,OAAS,GAQrC4b,iBAAkB,SAASnH,GACvB,QAAS3T,KAAKkT,aAAaS,EAAgBZ,KAQ/CjI,KAAM,QAAAA,IAASZ,GAIX,QAASY,IAAK2K,GACV1M,EAAKF,QAAQiC,KAAK2K,EAAOvL,GAJ7B,GAAInB,GAAO/I,KACPgT,EAAQhT,KAAKgT,KAObA,GAAQM,IACRxI,GAAK/B,EAAKC,QAAQyM,MAAQrC,EAASJ,IAGvClI,GAAK/B,EAAKC,QAAQyM,OAEdvL,EAAM6Q,iBACNjQ,GAAKZ,EAAM6Q,iBAIX/H,GAASM,IACTxI,GAAK/B,EAAKC,QAAQyM,MAAQrC,EAASJ,KAU3CgI,QAAS,SAAS9Q,GACd,MAAIlK,MAAKib,UACEjb,KAAK8K,KAAKZ,QAGrBlK,KAAKgT,MAAQ0H,KAOjBO,QAAS,WAEL,IADA,GAAIlX,GAAI,EACDA,EAAI/D,KAAKmT,YAAYjU,QAAQ,CAChC,KAAMc,KAAKmT,YAAYpP,GAAGiP,OAAS0H,GAAezH,KAC9C,OAAO,CAEXlP,KAEJ,OAAO,GAOXgH,UAAW,SAASwO,GAGhB,GAAI2B,GAAiBzV,MAAW8T,EAGhC,OAAK7T,GAAS1F,KAAKgJ,QAAQI,QAASpJ,KAAMkb,KAOtClb,KAAKgT,OAASyH,GAAmBpH,GAAkBqH,MACnD1a,KAAKgT,MAAQC,IAGjBjT,KAAKgT,MAAQhT,KAAKmb,QAAQD,QAItBlb,KAAKgT,OAASQ,GAAcD,GAAgBD,GAAcD,KAC1DrT,KAAKgb,QAAQE,MAfblb,KAAKob,aACLpb,KAAKgT,MAAQ0H,MAyBrBS,QAAS,SAAS5B,KAOlBS,eAAgB,aAOhBoB,MAAO,cA8DXpW,EAAQ6O,GAAgBhB,GAKpBC,UAKI1I,SAAU,GASdiR,SAAU,SAASnR,GACf,GAAIoR,GAAiBtb,KAAKgJ,QAAQoB,QAClC,OAA0B,KAAnBkR,GAAwBpR,EAAME,SAASlL,SAAWoc,GAS7DH,QAAS,SAASjR,GACd,GAAI8I,GAAQhT,KAAKgT,MACb/I,EAAYC,EAAMD,UAElBsR,EAAevI,GAASQ,GAAcD,IACtCiI,EAAUxb,KAAKqb,SAASnR,EAG5B,OAAIqR,KAAiBtR,EAAYU,KAAiB6Q,GACvCxI,EAAQK,GACRkI,GAAgBC,EACnBvR,EAAYS,GACLsI,EAAQM,GACNN,EAAQQ,GAGdR,EAAQO,GAFJC,GAIRkH,MAiBf1V,EAAQ8O,GAAeD,IAKnBf,UACI2C,MAAO,MACPgG,UAAW,GACXrR,SAAU,EACV1H,UAAW0U,IAGf4C,eAAgB,WACZ,GAAItX,GAAY1C,KAAKgJ,QAAQtG,UACzBqP,IAOJ,OANIrP,GAAYyU,IACZpF,EAAQrK,KAAK0K,IAEb1P,EAAYC,IACZoP,EAAQrK,KAAKwK,IAEVH,GAGX2J,cAAe,SAASxR,GACpB,GAAIlB,GAAUhJ,KAAKgJ,QACf2S,GAAW,EACX9P,EAAW3B,EAAM2B,SACjBnJ,EAAYwH,EAAMxH,UAClB6J,EAAIrC,EAAMgC,OACVO,EAAIvC,EAAMiC,MAed,OAZMzJ,GAAYsG,EAAQtG,YAClBsG,EAAQtG,UAAYyU,IACpBzU,EAAmB,IAAN6J,EAAWuB,GAAkBvB,EAAI,EAAKwB,GAAiBC,GACpE2N,EAAWpP,GAAKvM,KAAK+T,GACrBlI,EAAW0C,KAAK7B,IAAIxC,EAAMgC,UAE1BxJ,EAAmB,IAAN+J,EAAWqB,GAAkBrB,EAAI,EAAKwB,GAAeC,GAClEyN,EAAWlP,GAAKzM,KAAKgU,GACrBnI,EAAW0C,KAAK7B,IAAIxC,EAAMiC,UAGlCjC,EAAMxH,UAAYA,EACXiZ,GAAY9P,EAAW7C,EAAQyS,WAAa/Y,EAAYsG,EAAQtG,WAG3E2Y,SAAU,SAASnR,GACf,MAAO2J,IAAe3Q,UAAUmY,SAASpX,KAAKjE,KAAMkK,KAC/ClK,KAAKgT,MAAQQ,MAAkBxT,KAAKgT,MAAQQ,KAAgBxT,KAAK0b,cAAcxR,KAGxFY,KAAM,SAASZ,GAEXlK,KAAK+T,GAAK7J,EAAMgC,OAChBlM,KAAKgU,GAAK9J,EAAMiC,MAEhB,IAAIzJ,GAAY+Q,EAAavJ,EAAMxH,UAE/BA,KACAwH,EAAM6Q,gBAAkB/a,KAAKgJ,QAAQyM,MAAQ/S,GAEjD1C,KAAKwF,OAAOsF,KAAK7G,KAAKjE,KAAMkK,MAcpClF,EAAQiP,GAAiBJ,IAKrBf,UACI2C,MAAO,QACPgG,UAAW,EACXrR,SAAU,GAGd4P,eAAgB,WACZ,OAAQhI,KAGZqJ,SAAU,SAASnR,GACf,MAAOlK,MAAKwF,OAAO6V,SAASpX,KAAKjE,KAAMkK,KAClCqE,KAAK7B,IAAIxC,EAAMyC,MAAQ,GAAK3M,KAAKgJ,QAAQyS,WAAazb,KAAKgT,MAAQQ,KAG5E1I,KAAM,SAASZ,GACX,GAAoB,IAAhBA,EAAMyC,MAAa,CACnB,GAAIiP,GAAQ1R,EAAMyC,MAAQ,EAAI,KAAO,KACrCzC,GAAM6Q,gBAAkB/a,KAAKgJ,QAAQyM,MAAQmG,EAEjD5b,KAAKwF,OAAOsF,KAAK7G,KAAKjE,KAAMkK,MAiBpClF,EAAQkP,GAAiBrB,GAKrBC,UACI2C,MAAO,QACPrL,SAAU,EACVyR,KAAM,IACNJ,UAAW,GAGfzB,eAAgB,WACZ,OAAQ1H,KAGZ6I,QAAS,SAASjR,GACd,GAAIlB,GAAUhJ,KAAKgJ,QACf8S,EAAgB5R,EAAME,SAASlL,SAAW8J,EAAQoB,SAClD2R,EAAgB7R,EAAM2B,SAAW7C,EAAQyS,UACzCO,EAAY9R,EAAMwB,UAAY1C,EAAQ6S,IAM1C,IAJA7b,KAAKoU,OAASlK,GAIT6R,IAAkBD,GAAkB5R,EAAMD,WAAaS,GAAYC,MAAkBqR,EACtFhc,KAAKob,YACF,IAAIlR,EAAMD,UAAYO,GACzBxK,KAAKob,QACLpb,KAAKmU,OAAS9Q,EAAkB,WAC5BrD,KAAKgT,MAAQyH,GACbza,KAAKgb,WACNhS,EAAQ6S,KAAM7b,UACd,IAAIkK,EAAMD,UAAYS,GACzB,MAAO+P,GAEX,OAAOC,KAGXU,MAAO,WACHlZ,aAAalC,KAAKmU,SAGtBrJ,KAAM,SAASZ,GACPlK,KAAKgT,QAAUyH,KAIfvQ,GAAUA,EAAMD,UAAYS,GAC5B1K,KAAK6I,QAAQiC,KAAK9K,KAAKgJ,QAAQyM,MAAQ,KAAMvL,IAE7ClK,KAAKoU,OAAO5I,UAAYC,KACxBzL,KAAK6I,QAAQiC,KAAK9K,KAAKgJ,QAAQyM,MAAOzV,KAAKoU,aAevDpP,EAAQqP,GAAkBR,IAKtBf,UACI2C,MAAO,SACPgG,UAAW,EACXrR,SAAU,GAGd4P,eAAgB,WACZ,OAAQhI,KAGZqJ,SAAU,SAASnR,GACf,MAAOlK,MAAKwF,OAAO6V,SAASpX,KAAKjE,KAAMkK,KAClCqE,KAAK7B,IAAIxC,EAAM2C,UAAY7M,KAAKgJ,QAAQyS,WAAazb,KAAKgT,MAAQQ,OAc/ExO,EAAQsP,GAAiBT,IAKrBf,UACI2C,MAAO,QACPgG,UAAW,GACXpO,SAAU,GACV3K,UAAWyU,GAAuBxU,GAClCyH,SAAU,GAGd4P,eAAgB,WACZ,MAAOlG,IAAc5Q,UAAU8W,eAAe/V,KAAKjE,OAGvDqb,SAAU,SAASnR,GACf,GACImD,GADA3K,EAAY1C,KAAKgJ,QAAQtG,SAW7B,OARIA,IAAayU,GAAuBxU,IACpC0K,EAAWnD,EAAMkC,gBACV1J,EAAYyU,GACnB9J,EAAWnD,EAAMoC,iBACV5J,EAAYC,KACnB0K,EAAWnD,EAAMsC,kBAGdxM,KAAKwF,OAAO6V,SAASpX,KAAKjE,KAAMkK,IACnCxH,EAAYwH,EAAM8B,iBAClB9B,EAAM2B,SAAW7L,KAAKgJ,QAAQyS,WAC9BvR,EAAM6C,aAAe/M,KAAKgJ,QAAQoB,UAClCsC,GAAIW,GAAYrN,KAAKgJ,QAAQqE,UAAYnD,EAAMD,UAAYS,IAGnEI,KAAM,SAASZ,GACX,GAAIxH,GAAY+Q,EAAavJ,EAAM8B,gBAC/BtJ,IACA1C,KAAK6I,QAAQiC,KAAK9K,KAAKgJ,QAAQyM,MAAQ/S,EAAWwH,GAGtDlK,KAAK6I,QAAQiC,KAAK9K,KAAKgJ,QAAQyM,MAAOvL,MA2B9ClF,EAAQuP,GAAe1B,GAKnBC,UACI2C,MAAO,MACPrL,SAAU,EACV6R,KAAM,EACNC,SAAU,IACVL,KAAM,IACNJ,UAAW,EACXU,aAAc,IAGlBnC,eAAgB,WACZ,OAAQ3H,KAGZ8I,QAAS,SAASjR,GACd,GAAIlB,GAAUhJ,KAAKgJ,QAEf8S,EAAgB5R,EAAME,SAASlL,SAAW8J,EAAQoB,SAClD2R,EAAgB7R,EAAM2B,SAAW7C,EAAQyS,UACzCW,EAAiBlS,EAAMwB,UAAY1C,EAAQ6S,IAI/C,IAFA7b,KAAKob,QAEAlR,EAAMD,UAAYO,IAAgC,IAAfxK,KAAK0U,MACzC,MAAO1U,MAAKqc,aAKhB,IAAIN,GAAiBK,GAAkBN,EAAe,CAClD,GAAI5R,EAAMD,WAAaS,GACnB,MAAO1K,MAAKqc,aAGhB,IAAIC,IAAgBtc,KAAKwU,OAAStK,EAAMsB,UAAYxL,KAAKwU,MAAQxL,EAAQkT,SACrEK,GAAiBvc,KAAKyU,SAAW3I,EAAY9L,KAAKyU,QAASvK,EAAMoB,QAAUtC,EAAQmT,YAEvFnc,MAAKwU,MAAQtK,EAAMsB,UACnBxL,KAAKyU,QAAUvK,EAAMoB,OAEhBiR,GAAkBD,EAGnBtc,KAAK0U,OAAS,EAFd1U,KAAK0U,MAAQ,EAKjB1U,KAAKoU,OAASlK,CAId,IAAIsS,GAAWxc,KAAK0U,MAAQ1L,EAAQiT,IACpC,IAAiB,IAAbO,EAGA,MAAKxc,MAAK6a,sBAGN7a,KAAKmU,OAAS9Q,EAAkB,WAC5BrD,KAAKgT,MAAQyH,GACbza,KAAKgb,WACNhS,EAAQkT,SAAUlc,MACdwT,IANAiH,GAUnB,MAAOC,KAGX2B,YAAa,WAIT,MAHArc,MAAKmU,OAAS9Q,EAAkB,WAC5BrD,KAAKgT,MAAQ0H,IACd1a,KAAKgJ,QAAQkT,SAAUlc,MACnB0a,IAGXU,MAAO,WACHlZ,aAAalC,KAAKmU,SAGtBrJ,KAAM,WACE9K,KAAKgT,OAASyH,KACdza,KAAKoU,OAAOoI,SAAWxc,KAAK0U,MAC5B1U,KAAK6I,QAAQiC,KAAK9K,KAAKgJ,QAAQyM,MAAOzV,KAAKoU,YAoBvD7R,GAAOka,QAAU,QAMjBla,GAAOuQ,UAOH4J,WAAW,EAQX1H,YAAa4E,GAMbxQ,QAAQ,EASRH,YAAa,KAObO,WAAY,KAOZoL,SAEKP,IAAmBjL,QAAQ,KAC3B6K,IAAkB7K,QAAQ,IAAS,YACnCkL,IAAkB5R,UAAWyU,MAC7BrD,IAAgBpR,UAAWyU,KAAwB,WACnD5C,KACAA,IAAgBkB,MAAO,YAAawG,KAAM,IAAK,SAC/C/H,KAQLqB,UAMIoH,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,iBAI3B,IAAIC,IAAO,EACPC,GAAc,CA+BlBrI,IAAQ3R,WAMJT,IAAK,SAASuG,GAaV,MAZAvD,IAAOzF,KAAKgJ,QAASA,GAGjBA,EAAQgM,aACRhV,KAAKgV,YAAY+E,SAEjB/Q,EAAQC,cAERjJ,KAAKkK,MAAMmN,UACXrX,KAAKkK,MAAMjE,OAAS+C,EAAQC,YAC5BjJ,KAAKkK,MAAMb,QAERrJ,MASXmd,KAAM,SAASC,GACXpd,KAAK4K,QAAQyS,QAAUD,EAAQF,GAAcD,IASjDlS,UAAW,SAASwO,GAChB,GAAI3O,GAAU5K,KAAK4K,OACnB,KAAIA,EAAQyS,QAAZ,CAKArd,KAAKgV,YAAYkF,gBAAgBX,EAEjC,IAAI3F,GACAe,EAAc3U,KAAK2U,YAKnB2I,EAAgB1S,EAAQ0S,gBAIvBA,GAAkBA,GAAiBA,EAActK,MAAQyH,MAC1D6C,EAAgB1S,EAAQ0S,cAAgB,KAI5C,KADA,GAAIvZ,GAAI,EACDA,EAAI4Q,EAAYzV,QACnB0U,EAAae,EAAY5Q,GAQrB6G,EAAQyS,UAAYH,IACfI,GAAiB1J,GAAc0J,IAChC1J,EAAWkH,iBAAiBwC,GAGhC1J,EAAWwH,QAFXxH,EAAW7I,UAAUwO,IAOpB+D,GAAiB1J,EAAWZ,OAASQ,GAAcD,GAAgBD,MACpEgK,EAAgB1S,EAAQ0S,cAAgB1J,GAE5C7P,MASRvB,IAAK,SAASoR,GACV,GAAIA,YAAsBf,GACtB,MAAOe,EAIX,KAAK,GADDe,GAAc3U,KAAK2U,YACd5Q,EAAI,EAAGA,EAAI4Q,EAAYzV,OAAQ6E,IACpC,GAAI4Q,EAAY5Q,GAAGiF,QAAQyM,OAAS7B,EAChC,MAAOe,GAAY5Q,EAG3B,OAAO,OASXoR,IAAK,SAASvB,GACV,GAAIlQ,EAAekQ,EAAY,MAAO5T,MAClC,MAAOA,KAIX,IAAIud,GAAWvd,KAAKwC,IAAIoR,EAAW5K,QAAQyM,MAS3C,OARI8H,IACAvd,KAAKwd,OAAOD,GAGhBvd,KAAK2U,YAAYjN,KAAKkM,GACtBA,EAAW/K,QAAU7I,KAErBA,KAAKgV,YAAY+E,SACVnG,GAQX4J,OAAQ,SAAS5J,GACb,GAAIlQ,EAAekQ,EAAY,SAAU5T,MACrC,MAAOA,KAMX,IAHA4T,EAAa5T,KAAKwC,IAAIoR,GAGN,CACZ,GAAIe,GAAc3U,KAAK2U,YACnB3V,EAAQgI,EAAQ2N,EAAaf,EAE7B5U,UACA2V,EAAYtD,OAAOrS,EAAO,GAC1BgB,KAAKgV,YAAY+E,UAIzB,MAAO/Z,OASX2B,GAAI,SAAS8b,EAAQtX,GACjB,GAAIsX,IAAWra,GAGX+C,IAAY/C,EAAhB,CAIA,GAAI0R,GAAW9U,KAAK8U,QAKpB,OAJAhR,GAAKsC,EAASqX,GAAS,SAAShI,GAC5BX,EAASW,GAASX,EAASW,OAC3BX,EAASW,GAAO/N,KAAKvB,KAElBnG,OASX0d,IAAK,SAASD,EAAQtX,GAClB,GAAIsX,IAAWra,EAAf,CAIA,GAAI0R,GAAW9U,KAAK8U,QAQpB,OAPAhR,GAAKsC,EAASqX,GAAS,SAAShI,GACvBtP,EAGD2O,EAASW,IAAUX,EAASW,GAAOpE,OAAOrK,EAAQ8N,EAASW,GAAQtP,GAAU,SAFtE2O,GAASW,KAKjBzV,OAQX8K,KAAM,SAAS2K,EAAOC,GAEd1V,KAAKgJ,QAAQ0T,WACblH,GAAgBC,EAAOC,EAI3B,IAAIZ,GAAW9U,KAAK8U,SAASW,IAAUzV,KAAK8U,SAASW,GAAOrO,OAC5D,IAAK0N,GAAaA,EAAS5V,OAA3B,CAIAwW,EAAKtW,KAAOqW,EACZC,EAAK7T,eAAiB,WAClB6T,EAAKzI,SAASpL,iBAIlB,KADA,GAAIkC,GAAI,EACDA,EAAI+Q,EAAS5V,QAChB4V,EAAS/Q,GAAG2R,GACZ3R,MAQRsT,QAAS,WACLrX,KAAKuI,SAAW0M,GAAejV,MAAM,GAErCA,KAAK8U,YACL9U,KAAK4K,WACL5K,KAAKkK,MAAMmN,UACXrX,KAAKuI,QAAU,OAyCvB9C,GAAOlD,IACHiI,YAAaA,GACb8F,WAAYA,GACZ5F,UAAWA,GACXC,aAAcA,GAEdsI,eAAgBA,GAChBO,YAAaA,GACbD,cAAeA,GACfD,YAAaA,GACbmH,iBAAkBA,GAClBpH,gBAAiBA,GACjBqH,aAAcA,GAEd5M,eAAgBA,GAChBC,eAAgBA,GAChBC,gBAAiBA,GACjBC,aAAcA,GACdC,eAAgBA,GAChBiJ,qBAAsBA,GACtBxU,mBAAoBA,GACpByU,cAAeA,GAEfvC,QAASA,GACTjM,MAAOA,EACPgJ,YAAaA,EAEbhI,WAAYA,EACZG,WAAYA,EACZL,kBAAmBA,EACnBI,gBAAiBA,EACjByF,iBAAkBA,EAElBsD,WAAYA,EACZgB,eAAgBA,GAChB8J,IAAKpJ,GACLqJ,IAAK9J,GACL+J,MAAOvJ,GACPwJ,MAAO7J,GACP8J,OAAQ1J,GACR2J,MAAO9J,GAEPvS,GAAIqE,EACJ0X,IAAKpX,EACLxC,KAAMA,EACN2S,MAAOA,GACPF,OAAQA,GACR9Q,OAAQA,GACRT,QAASA,EACTvB,OAAQA,EACRoE,SAAUA,GAKd,IAAIoW,IAAgC,mBAAX1c,GAAyBA,EAA0B,mBAATwH,MAAuBA,OAC1FkV,IAAW1b,OAASA,GAEE,kBAAX2b,SAAyBA,OAAOC,IACvCD,OAAO,WACH,MAAO3b,MAEa,mBAAV6b,SAAyBA,OAAOC,QAC9CD,OAAOC,QAAU9b,GAEjBhB,EAAO4B,GAAcZ,IAGtBhB,OAAQhD,SAAU","file":"timeline.js","sourcesContent":["// @codekit-prepend \"/vendor/hammer-2.0.8.js\";\n\njQuery( document ).ready(function( $ ) {\n\n  // DOMMouseScroll included for firefox support\n  var canScroll = true,\n      scrollController = null;\n  $(this).on('mousewheel DOMMouseScroll', function(e){\n\n    if (!($('.outer-nav').hasClass('is-vis'))) {\n\n      e.preventDefault();\n\n      var delta = (e.originalEvent.wheelDelta) ? -e.originalEvent.wheelDelta : e.originalEvent.detail * 20;\n\n      if (delta > 50 && canScroll) {\n        canScroll = false;\n        clearTimeout(scrollController);\n        scrollController = setTimeout(function(){\n          canScroll = true;\n        }, 800);\n        updateHelper(1);\n      }\n      else if (delta < -50 && canScroll) {\n        canScroll = false;\n        clearTimeout(scrollController);\n        scrollController = setTimeout(function(){\n          canScroll = true;\n        }, 800);\n        updateHelper(-1);\n      }\n\n    }\n\n  });\n\n  $('.side-nav li, .outer-nav li').click(function(){\n\n    if (!($(this).hasClass('is-active'))) {\n\n      var $this = $(this),\n          curActive = $this.parent().find('.is-active'),\n          curPos = $this.parent().children().index(curActive),\n          nextPos = $this.parent().children().index($this),\n          lastItem = $(this).parent().children().length - 1;\n\n      updateNavs(nextPos);\n      updateContent(curPos, nextPos, lastItem);\n\n    }\n\n  });\n\n  $('.cta').click(function(){\n\n    var curActive = $('.side-nav').find('.is-active'),\n        curPos = $('.side-nav').children().index(curActive),\n        lastItem = $('.side-nav').children().length - 1,\n        nextPos = lastItem;\n\n    updateNavs(lastItem);\n    updateContent(curPos, nextPos, lastItem);\n\n  });\n\n  // swipe support for touch devices\n  var targetElement = document.getElementById('viewport'),\n      mc = new Hammer(targetElement);\n  mc.get('swipe').set({ direction: Hammer.DIRECTION_VERTICAL });\n  mc.on('swipeup swipedown', function(e) {\n\n    updateHelper(e);\n\n  });\n\n  $(document).keyup(function(e){\n\n    if (!($('.outer-nav').hasClass('is-vis'))) {\n      e.preventDefault();\n      updateHelper(e);\n    }\n\n  });\n\n  // determine scroll, swipe, and arrow key direction\n  function updateHelper(param) {\n\n    var curActive = $('.side-nav').find('.is-active'),\n        curPos = $('.side-nav').children().index(curActive),\n        lastItem = $('.side-nav').children().length - 1,\n        nextPos = 0;\n\n    if (param.type === \"swipeup\" || param.keyCode === 40 || param > 0) {\n      if (curPos !== lastItem) {\n        nextPos = curPos + 1;\n        updateNavs(nextPos);\n        updateContent(curPos, nextPos, lastItem);\n      }\n      else {\n        updateNavs(nextPos);\n        updateContent(curPos, nextPos, lastItem);\n      }\n    }\n    else if (param.type === \"swipedown\" || param.keyCode === 38 || param < 0){\n      if (curPos !== 0){\n        nextPos = curPos - 1;\n        updateNavs(nextPos);\n        updateContent(curPos, nextPos, lastItem);\n      }\n      else {\n        nextPos = lastItem;\n        updateNavs(nextPos);\n        updateContent(curPos, nextPos, lastItem);\n      }\n    }\n\n  }\n\n  // sync side and outer navigations\n  function updateNavs(nextPos) {\n\n    $('.side-nav, .outer-nav').children().removeClass('is-active');\n    $('.side-nav').children().eq(nextPos).addClass('is-active');\n    $('.outer-nav').children().eq(nextPos).addClass('is-active');\n\n  }\n\n  // update main content area\n  function updateContent(curPos, nextPos, lastItem) {\n\n    $('.main-content').children().removeClass('section--is-active');\n    $('.main-content').children().eq(nextPos).addClass('section--is-active');\n    $('.main-content .section').children().removeClass('section--next section--prev');\n\n    if (curPos === lastItem && nextPos === 0 || curPos === 0 && nextPos === lastItem) {\n      $('.main-content .section').children().removeClass('section--next section--prev');\n    }\n    else if (curPos < nextPos) {\n      $('.main-content').children().eq(curPos).children().addClass('section--next');\n    }\n    else {\n      $('.main-content').children().eq(curPos).children().addClass('section--prev');\n    }\n\n    if (nextPos !== 0 && nextPos !== lastItem) {\n      $('.header--cta').addClass('is-active');\n    }\n    else {\n      $('.header--cta').removeClass('is-active');\n    }\n\n  }\n\n  function outerNav() {\n\n    $('.header--nav-toggle').click(function(){\n\n      $('.perspective').addClass('perspective--modalview');\n      setTimeout(function(){\n        $('.perspective').addClass('effect-rotate-left--animate');\n      }, 25);\n      $('.outer-nav, .outer-nav li, .outer-nav--return').addClass('is-vis');\n\n    });\n\n    $('.outer-nav--return, .outer-nav li').click(function(){\n\n      $('.perspective').removeClass('effect-rotate-left--animate');\n      setTimeout(function(){\n        $('.perspective').removeClass('perspective--modalview');\n      }, 400);\n      $('.outer-nav, .outer-nav li, .outer-nav--return').removeClass('is-vis');\n\n    });\n\n  }\n\n  function workSlider() {\n\n    $('.slider--prev, .slider--next').click(function() { \n\n      var $this = $(this),\n          curLeft = $('.yeti-slider').find('.yeti-slider--item-left'),\n          curLeftPos = $('.yeti-slider').children().index(curLeft),\n          curCenter = $('.yeti-slider').find('.yeti-slider--item-center'),\n          curCenterPos = $('.yeti-slider').children().index(curCenter),\n          curRight = $('.yeti-slider').find('.yeti-slider--item-right'),\n          curRightPos = $('.yeti-slider').children().index(curRight),\n          totalWorks = $('.yeti-slider').children().length,\n          $left = $('.yeti-slider--item-left'),\n          $center = $('.yeti-slider--item-center'),\n          $right = $('.yeti-slider--item-right'),\n          $item = $('.yeti-slider--item');\n\n      $('.yeti-slider').animate({ opacity : 0 }, 400);\n\n      setTimeout(function(){\n\n      if ($this.hasClass('slider--next')) {\n        if (curLeftPos < totalWorks - 1 && curCenterPos < totalWorks - 1 && curRightPos < totalWorks - 1) {\n          $left.removeClass('yeti-slider--item-left').next().addClass('yeti-slider--item-left');\n          $center.removeClass('yeti-slider--item-center').next().addClass('yeti-slider--item-center');\n          $right.removeClass('yeti-slider--item-right').next().addClass('yeti-slider--item-right');\n        }\n        else {\n          if (curLeftPos === totalWorks - 1) {\n            $item.removeClass('yeti-slider--item-left').first().addClass('yeti-slider--item-left');\n            $center.removeClass('yeti-slider--item-center').next().addClass('yeti-slider--item-center');\n            $right.removeClass('yeti-slider--item-right').next().addClass('yeti-slider--item-right');\n          }\n          else if (curCenterPos === totalWorks - 1) {\n            $left.removeClass('yeti-slider--item-left').next().addClass('yeti-slider--item-left');\n            $item.removeClass('yeti-slider--item-center').first().addClass('yeti-slider--item-center');\n            $right.removeClass('yeti-slider--item-right').next().addClass('yeti-slider--item-right');\n          }\n          else {\n            $left.removeClass('yeti-slider--item-left').next().addClass('yeti-slider--item-left');\n            $center.removeClass('yeti-slider--item-center').next().addClass('yeti-slider--item-center');\n            $item.removeClass('yeti-slider--item-right').first().addClass('yeti-slider--item-right');\n          }\n        }\n      }\n      else {\n        if (curLeftPos !== 0 && curCenterPos !== 0 && curRightPos !== 0) {\n          $left.removeClass('yeti-slider--item-left').prev().addClass('yeti-slider--item-left');\n          $center.removeClass('yeti-slider--item-center').prev().addClass('yeti-slider--item-center');\n          $right.removeClass('yeti-slider--item-right').prev().addClass('yeti-slider--item-right');\n        }\n        else {\n          if (curLeftPos === 0) {\n            $item.removeClass('yeti-slider--item-left').last().addClass('yeti-slider--item-left');\n            $center.removeClass('yeti-slider--item-center').prev().addClass('yeti-slider--item-center');\n            $right.removeClass('yeti-slider--item-right').prev().addClass('yeti-slider--item-right');\n          }\n          else if (curCenterPos === 0) {\n            $left.removeClass('yeti-slider--item-left').prev().addClass('yeti-slider--item-left');\n            $item.removeClass('yeti-slider--item-center').last().addClass('yeti-slider--item-center');\n            $right.removeClass('yeti-slider--item-right').prev().addClass('yeti-slider--item-right');\n          }\n          else {\n            $left.removeClass('yeti-slider--item-left').prev().addClass('yeti-slider--item-left');\n            $center.removeClass('yeti-slider--item-center').prev().addClass('yeti-slider--item-center');\n            $item.removeClass('yeti-slider--item-right').last().addClass('yeti-slider--item-right');\n          }\n        }\n      }\n\n    }, 400);\n\n    $('.yeti-slider').animate({ opacity : 1 }, 400);\n\n    });\n\n  }\n\n  function transitionLabels() {\n\n    $('.work-request--information input').focusout(function(){\n\n      var textVal = $(this).val();\n\n      if (textVal === \"\") {\n        $(this).removeClass('has-value');\n      }\n      else {\n        $(this).addClass('has-value');\n      }\n\n      // correct mobile device window position\n      window.scrollTo(0, 0);\n\n    });\n\n  }\n\n  outerNav();\n  workSlider();\n  transitionLabels();\n\n});\n","/*! Hammer.JS - v2.0.8 - 2016-04-23\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.8';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"]}